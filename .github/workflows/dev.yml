# Home Assistant Operating System build workflow

name: Development build

on:
  workflow_dispatch:
  pull_request:
    types: [opened,synchronize,labeled]

jobs:
  version:
    name: Generate version
    runs-on: [ "ubuntu-20.04" ]
    outputs:
      version_main: ${{ steps.version_main.outputs.version_main }}
      version_dev: ${{ steps.version_dev.outputs.version_dev }}${{ steps.version_pr.outputs.version_pr }}
    steps:
      - name: debug
        run: |
          echo "${{ toJson(github.event.pull_request.labels) }}"
          echo "${{ toJson(github.event.pull_request.labels.*.names) }}"
      - name: Generate Development build version for full dev build
        shell: bash
        id: version_dev
        run: |
          version_dev="dev$(date --utc +'%Y%m%d')"
          echo "Development version \"${version_dev}\""
          echo "::set-output name=version_dev::${version_dev}"
      - name: Generate Development build version for PR
        if: ${{ github.event.issue.pull_request }}
        shell: bash
        id: version_pr
        run: |
          version_pr="+${{ github.event.issue.number }}"
          echo "PR \"${version_pr}\""
          echo "Issue comment ${{ github.event.issue_comment.comment }}"
          echo "::set-output name=version_pr::${version_pr}"
      - uses: actions/checkout@v2
      - name: Get Major/Minor version
        id: version_main
        run: |
          major=$(cat ${GITHUB_WORKSPACE}/buildroot-external/meta | grep VERSION_MAJOR | cut -d'=' -f2)
          build=$(cat ${GITHUB_WORKSPACE}/buildroot-external/meta | grep VERSION_BUILD | cut -d'=' -f2)
          echo "::set-output name=version_main::${major}.${build}"

  build:
    if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'run-dev-build') }}
    name: Release build for ${{ matrix.board.name }}
    needs: version
    strategy:
      fail-fast: false
      matrix:
        board:
          - {"name": "ova", "output": "ova", "runner": "x86-64-runner"}
    runs-on: ${{ matrix.board.runner }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build container
        run: docker build -t haos-builder .

      - name: 'Add release PKI certs'
        env:
          RAUC_CERTIFICATE: ${{ secrets.RAUC_CERTIFICATE }}
          RAUC_PRIVATE_KEY: ${{ secrets.RAUC_PRIVATE_KEY }}
        run: |
          echo -e "-----BEGIN CERTIFICATE-----\n${RAUC_CERTIFICATE}\n-----END CERTIFICATE-----" > cert.pem
          echo -e "-----BEGIN PRIVATE KEY-----\n${RAUC_PRIVATE_KEY}\n-----END PRIVATE KEY-----" > key.pem

      - run: |
          echo Found it! ${{ needs.version.outputs.version_dev }}

  bump_version:
    name: Bump dev version to ${{ needs.version.outputs.version_main }}.${{ needs.version.outputs.version_dev }}
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: [ build, version ]
    runs-on: [ "ubuntu-20.04" ]

    steps:
    - name: Initialize git
      uses: home-assistant/actions/helpers/git-init@master
      with:
        name: ${{ secrets.GIT_NAME }}
        email: ${{ secrets.GIT_EMAIL }}
        token: ${{ secrets.GIT_TOKEN }}

    - name: Bump Home Assistant OS dev version
      uses: home-assistant/actions/helpers/version-push@master
      with:
        key: "hassos[]"
        key-description: "Home Assistant OS"
        version: ${{ needs.version.outputs.version_main }}.${{ needs.version.outputs.version_dev }}
        channel: "dev"
